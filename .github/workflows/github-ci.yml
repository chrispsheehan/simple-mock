name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.set_sha.outputs.GITHUB_SHA_SHORT }}
    steps:
    - uses: actions/checkout@v2
    - id: set_sha
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT

    - uses: actions/setup-node@v1
      name: Node.js
      with:
        node-version: 16

    - name: Build
      run: yarn build

    - uses: actions/upload-artifact@master
      with:
        name: dist-build
        path: dist

  test:
    env:
      STATE_FILE: /home/runner/work/state.json
      MOCK_REFERENCE: 'CI'
      FOREVER: node_modules/forever/bin/forever
      INDEX: dist/index.js
      
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@master
      with:
        name: dist-build
        path: dist
    - name: check-dist
      run: ls dist
  
    - name: Yarn
      run: yarn && yarn add forever && yarn add curl

    - name: Start
      run: echo '{}' > ${{ env.STATE_FILE }} && sleep 2 && ${{ env.FOREVER }} start ${{ env.INDEX }} && sleep 10

    - name: Ping
      run: curl localhost:8080/health

    - uses: matt-ball/newman-action@master
      with:
        collection: Mock.postman_collection.json

    - name: Print logs
      run: ${{ env.FOREVER }} logs && awk '{print}' /home/runner/.forever/*.log

    - name: Stop
      run: ${{ env.FOREVER }} stop ${{ env.INDEX }}

  # push:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v2
    
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2

  #   - uses: actions/download-artifact@master
  #     with:
  #       name: dist-build
  #       path: dist
  #   - name: check-dist
  #     run: ls dist

  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # - name: Docker Push
    #   uses: docker/build-push-action@v3
    #   env:
    #     DOCKERHUB_USERNAME: '${{ secrets.DOCKERHUB_USERNAME }}'
    #   with:
    #     context: .
    #     push: true
    #     tags: "${{ env.DOCKERHUB_USERNAME }}/example-mock:${{ needs.build.outputs.sha_short }}"