name: ci

on:
  push:
    branches:
      - 'main'

# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       output1: ${{ steps.step1.outputs.test }}
#     steps:
#       - id: step1
#         run: echo "test=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT

#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     env:
#       DOCKERHUB_USERNAME: '${{ secrets.DOCKERHUB_USERNAME }}'
#     steps:
#       - run: echo ${{needs.job1.outputs.output1}} and $DOCKERHUB_USERNAME


jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.set_sha.outputs.GITHUB_SHA_SHORT }}
    steps:
    - id: set_sha
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT

    - uses: actions/setup-node@v1
      name: Node.js
      with:
        node-version: 16

    - name: Build
      run: |
        yarn build

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Docker Push
      uses: docker/build-push-action@v3
      env:
        DOCKERHUB_USERNAME: '${{ secrets.DOCKERHUB_USERNAME }}'
      with:
        context: .
        push: true
        tags: "$DOCKERHUB_USERNAME/example-mock:${{ needs.build.outputs.sha_short }}"